import os
import time
from selenium import webdriver
from datetime import datetime, timedelta
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.action_chains import ActionChains
from webdriver_manager.chrome import ChromeDriverManager

def close_existing_chrome():
    """Bez√°rja az √∂sszes fut√≥ Chrome b√∂ng√©sz≈ët Windows rendszeren."""
    try:
        os.system("taskkill /IM chrome.exe /F")  
        print("Minden Chrome b√∂ng√©sz≈ët bez√°rtam.")
    except Exception as e:
        print(f"Hiba t√∂rt√©nt a Chrome bez√°r√°sakor: {e}")


def setup_browser():
    """Elind√≠tja √©s be√°ll√≠tja a Chrome b√∂ng√©sz≈ët, majd megnyitja a sz√ºks√©ges men√ºket."""
    user_name = os.environ.get("USERNAME") or os.getlogin()
    download_path = f"C:\\Users\\{user_name}\\Downloads"

    print("\nA Fleet KPI adatok let√∂lt√©se folyamatban van, k√©rlek v√°rj.")
    print(f"üë§ USERNAME: {user_name}")

    chrome_profile_path = f"C:\\Users\\{user_name}\\AppData\\Local\\Google\\Chrome\\User Data"
    
    options = webdriver.ChromeOptions()
    options.add_argument("--headless=new")  # √öjabb headless m√≥d
    options.add_argument(f"user-data-dir={chrome_profile_path}")
    options.add_argument("profile-directory=Default")
    options.add_argument("--allow-running-insecure-content")
    options.add_experimental_option("excludeSwitches", ["enable-automation"])
    options.add_experimental_option("useAutomationExtension", False)
    options.add_argument("--unsafely-treat-insecure-origin-as-secure=http://tata.fleetmanager.guentner.local/")
    options.add_experimental_option("prefs", {"safebrowsing.enabled": True})
    
    # Let√∂lt√©si be√°ll√≠t√°sok
    prefs = {
        "download.default_directory": download_path,
        "download.prompt_for_download": False,  # Ne k√©rdezzen r√° a ment√©sre
        "download.directory_upgrade": True,
        "safebrowsing.enabled": True
    }

    options.add_experimental_option("prefs", prefs)

    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
    driver.get("http://tata.fleetmanager.guentner.local/")
    wait = WebDriverWait(driver, 5)
    time.sleep(5)

    interact_with_page(driver)
    
    return driver, user_name, download_path

def interact_with_page(driver):
    wait = WebDriverWait(driver, 5)
    
    try:
        lang_switch = wait.until(EC.element_to_be_clickable((By.ID, "enCulture")))
        lang_switch.click()
        #print("Nyelvv√°lt√°s OK")
    except Exception as e:
        print("Hiba t√∂rt√©nt a nyelvv√°lt√°skor:", e)
    
    time.sleep(5)
    
    # Reports men√º megnyit√°sa
    try:
        reports_menu = wait.until(EC.element_to_be_clickable((By.XPATH, "//span[text()='Reports']/ancestor::a")))
        reports_menu.click()
    except:
        print("Selenium nem tud kattintani, pr√≥b√°lkoz√°s JavaScript-tel...")
        reports_menu = driver.find_element(By.XPATH, "//span[text()='Reports']/ancestor::a")
        driver.execute_script("arguments[0].click();", reports_menu)
    
    time.sleep(2)
    
    reports_sub_menu = wait.until(EC.element_to_be_clickable((By.XPATH, "(//span[text()='Reports'])[2]/parent::a")))
    reports_sub_menu.click()

    time.sleep(5)


